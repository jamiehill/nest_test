{
  "parser": "babel-eslint",
  "env": {
    "browser": true,     // browser global variables.
    "node": true,        // Node.js global variables and Node.js-specific rules.
    "amd": true,         // defines require() and define() as global variables as per the amd spec.
    "jquery": true       // jquery global variables.
  },
  "ecmaFeatures": {
    "binaryLiterals": true,                    // enable binary literals
    "blockBindings": true,                     // enable let and const (aka block bindings)
    "defaultParams": true,                     // enable default function parameters
    "forOf": true,                             // enable for-of loops
    "generators": true,                        // enable generators
    "objectLiteralComputedProperties": true,   // enable computed object literal property names
    "objectLiteralDuplicateProperties": true,  // enable duplicate object literal properties in strict mode
    "objectLiteralShorthandMethods": true,     // enable object literal shorthand methods
    "objectLiteralShorthandProperties": true,  // enable object literal shorthand properties
    "octalLiterals": true,                     // enable octal literals
    "regexUFlag": true,                        // enable the regular expression u flag
    "regexYFlag": true,                        // enable the regular expression y flag
    "templateStrings": true,                   // enable template strings
    "unicodeCodePointEscapes": true,           // enable code point escapes
    "jsx": true                                // enable JSX
  },
  "globals": {
    "React": true,
    "Backbone": true,
    "ReactDOM": true,
    "ReactIntl": true,
    "Cookies": true,
    "moment": true
  },
  "rules": {
    // eslint-plugin-react
    //
    "react/display-name": 0, // Prevent missing displayName in a React component definition
    "react/jsx-quotes": [2, "double", "avoid-escape"], // Enforce quote style for JSX attributes
    "react/jsx-no-undef": 2, // Disallow undeclared variables in JSX
    "react/jsx-sort-props": 0, // Enforce props alphabetical sorting
    "react/jsx-uses-react": 2, // Prevent React to be incorrectly marked as unused
    "react/jsx-uses-vars": 2, // Prevent variables used in JSX to be incorrectly marked as unused
    "react/no-did-mount-set-state": 2, // Prevent usage of setState in componentDidMount
    "react/no-did-update-set-state": 2, // Prevent usage of setState in componentDidUpdate
    "react/no-multi-comp": 0, // Prevent multiple component definition per file
    "react/no-unknown-property": 2, // Prevent usage of unknown DOM property
    "react/prop-types": 2, // Prevent missing props validation in a React component definition
    "react/react-in-jsx-scope": 0, // Prevent missing React when using JSX
    "react/self-closing-comp": 2, // Prevent extra closing tags for components without children
    "react/wrap-multilines": 2, // Prevent missing parentheses around multilines JSX
  },
  "plugins": [
    "react"
  ]
}
